.\" Automatically generated by Pod::Man 4.07 (Pod::Simple 3.32)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "DEBCONF-SET-SELECTIONS 1"
.TH DEBCONF-SET-SELECTIONS 1 "2017-05-21" "" "Debconf"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
debconf\-set\-selections \- insert new values into the debconf database
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\& debconf\-set\-selections file
\& debconf\-get\-selections | ssh newhost debconf\-set\-selections
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBdebconf-set-selections\fR can be used to pre-seed the debconf database with
answers, or to change answers in the database. Each question will be marked
as seen to prevent debconf from asking the question interactively.
.PP
Reads from a file if a filename is given, otherwise from stdin.
.SH "WARNING"
.IX Header "WARNING"
Only use this command to seed debconf values for packages that will be or
are installed. Otherwise you can end up with values in the database for
uninstalled packages that will not go away, or with worse problems
involving shared values. It is recommended that this only be used to seed
the database if the originating machine has an identical install.
.SH "DATA FORMAT"
.IX Header "DATA FORMAT"
The data is a series of lines. Lines beginning with a # character are
comments. Blank lines are ignored. All other lines set the value of one
question, and should contain four values, each separated by one character
of whitespace. The first value is the name of the package that owns the
question. The second is the name of the question, the third value is the
type of this question, and the fourth value (through the end of the line)
is the value to use for the answer of the question.
.PP
Alternatively, the third value can be \*(L"seen\*(R"; then the preseed line only
controls whether the question is marked as seen in debconf's database. Note
that preseeding a question's value defaults to marking that question as
seen, so to override the default value without marking a question seen, you
need two lines.
.PP
Lines can be continued to the next line by ending them with a \*(L"\e\*(R"
character.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.Vb 2
\& # Force debconf priority to critical.
\& debconf debconf/priority select critical
\&
\& # Override default frontend to readline, but allow user to select.
\& debconf debconf/frontend select readline
\& debconf debconf/frontend seen false
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-verbose\fR, \fB\-v\fR" 4
.IX Item "--verbose, -v"
verbose output
.IP "\fB\-\-checkonly\fR, \fB\-c\fR" 4
.IX Item "--checkonly, -c"
only check the input file format, do not save changes to database
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIdebconf\-get\-selections\fR\|(1)
(available in the debconf-utils package)
.SH "AUTHOR"
.IX Header "AUTHOR"
Petter Reinholdtsen <pere@hungry.com>
