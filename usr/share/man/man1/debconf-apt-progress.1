.\" Automatically generated by Pod::Man 4.07 (Pod::Simple 3.32)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "DEBCONF-APT-PROGRESS 1"
.TH DEBCONF-APT-PROGRESS 1 "2017-05-21" "" "Debconf"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
debconf\-apt\-progress \- install packages using debconf to display a progress bar
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 5
\& debconf\-apt\-progress [\-\-] command [args ...]
\& debconf\-apt\-progress \-\-config
\& debconf\-apt\-progress \-\-start
\& debconf\-apt\-progress \-\-from waypoint \-\-to waypoint [\-\-] command [args ...]
\& debconf\-apt\-progress \-\-stop
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBdebconf-apt-progress\fR installs packages using debconf to display a
progress bar. The given \fIcommand\fR should be any command-line apt frontend;
specifically, it must send progress information to the file descriptor
selected by the \f(CW\*(C`APT::Status\-Fd\*(C'\fR configuration option, and must keep the
file descriptors nominated by the \f(CW\*(C`APT::Keep\-Fds\*(C'\fR configuration option open
when invoking debconf (directly or indirectly), as those file descriptors
will be used for the debconf passthrough protocol.
.PP
The arguments to the command you supply should generally include \fB\-y\fR (for
\&\fBapt-get\fR or \fBaptitude\fR) or similar to avoid the apt frontend prompting
for input. \fBdebconf-apt-progress\fR cannot do this itself because the
appropriate argument may differ between apt frontends.
.PP
The \fB\-\-start\fR, \fB\-\-stop\fR, \fB\-\-from\fR, and \fB\-\-to\fR options may be used to
create a progress bar with multiple segments for different stages of
installation, provided that the caller is a debconf confmodule. The caller
may also interact with the progress bar itself using the debconf protocol if
it so desires.
.PP
debconf locks its config database when it starts up, which makes it
unfortunately inconvenient to have one instance of debconf displaying the
progress bar and another passing through questions from packages being
installed. If you're using a multiple-segment progress bar, you'll need to
eval the output of the \fB\-\-config\fR option before starting the debconf
frontend to work around this. See \*(L"\s-1EXAMPLES\*(R"\s0 in the \s-1EXAMPLES\s0 section below.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-config\fR" 4
.IX Item "--config"
Print environment variables necessary to start up a progress bar frontend.
.IP "\fB\-\-start\fR" 4
.IX Item "--start"
Start up a progress bar, running from 0 to 100 by default. Use \fB\-\-from\fR and
\&\fB\-\-to\fR to use other endpoints.
.IP "\fB\-\-from\fR \fIwaypoint\fR" 4
.IX Item "--from waypoint"
If used with \fB\-\-start\fR, make the progress bar begin at \fIwaypoint\fR rather
than 0.
.Sp
Otherwise, install packages with their progress bar beginning at this
\&\*(L"waypoint\*(R". Must be used with \fB\-\-to\fR.
.IP "\fB\-\-to\fR \fIwaypoint\fR" 4
.IX Item "--to waypoint"
If used with \fB\-\-start\fR, make the progress bar end at \fIwaypoint\fR rather
than 100.
.Sp
Otherwise, install packages with their progress bar ending at this
\&\*(L"waypoint\*(R". Must be used with \fB\-\-from\fR.
.IP "\fB\-\-stop\fR" 4
.IX Item "--stop"
Stop a running progress bar.
.IP "\fB\-\-no\-progress\fR" 4
.IX Item "--no-progress"
Avoid starting, stopping, or stepping the progress bar. Progress
messages from apt, media change events, and debconf questions will still
be passed through to debconf.
.IP "\fB\-\-dlwaypoint\fR \fIpercentage\fR" 4
.IX Item "--dlwaypoint percentage"
Specify what percent of the progress bar to use for downloading packages.
The remainder will be used for installing packages. The default is to use
15% for downloading and the remaining 85% for installing.
.IP "\fB\-\-logfile\fR \fIfile\fR" 4
.IX Item "--logfile file"
Send the normal output from apt to the given file.
.IP "\fB\-\-logstderr\fR" 4
.IX Item "--logstderr"
Send the normal output from apt to stderr. If you supply neither
\&\fB\-\-logfile\fR nor \fB\-\-logstderr\fR, the normal output from apt will be
discarded.
.IP "\fB\-\-\fR" 4
.IX Item "--"
Terminate options. Since you will normally need to give at least the \fB\-y\fR
argument to the command being run, you will usually need to use \fB\-\-\fR to
prevent that being interpreted as an option to \fBdebconf-apt-progress\fR
itself.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
Install the \s-1GNOME\s0 desktop and an X window system development environment
within a progress bar:
.PP
.Vb 1
\& debconf\-apt\-progress \-\- aptitude \-y install gnome x\-window\-system\-dev
.Ve
.PP
Install the \s-1GNOME, KDE,\s0 and \s-1XFCE\s0 desktops within a single progress bar,
allocating 45% of the progress bar for each of \s-1GNOME\s0 and \s-1KDE\s0 and the
remaining 10% for \s-1XFCE:\s0
.PP
.Vb 10
\& #! /bin/sh
\& set \-e
\& case $1 in
\&   \*(Aq\*(Aq)
\&     eval "$(debconf\-apt\-progress \-\-config)"
\&     "$0" debconf
\&     ;;
\&   debconf)
\&     . /usr/share/debconf/confmodule
\&     debconf\-apt\-progress \-\-start
\&     debconf\-apt\-progress \-\-from 0 \-\-to 45 \-\- apt\-get \-y install gnome
\&     debconf\-apt\-progress \-\-from 45 \-\-to 90 \-\- apt\-get \-y install kde
\&     debconf\-apt\-progress \-\-from 90 \-\-to 100 \-\- apt\-get \-y install xfce4
\&     debconf\-apt\-progress \-\-stop
\&     ;;
\& esac
.Ve
.SH "RETURN CODE"
.IX Header "RETURN CODE"
The exit code of the specified command is returned, unless the user hit the
cancel button on the progress bar. If the cancel button was hit, a value of
30 is returned. To avoid ambiguity, if the command returned 30, a value of
3 will be returned.
.SH "AUTHORS"
.IX Header "AUTHORS"
Colin Watson <cjwatson@debian.org>
.PP
Joey Hess <joeyh@debian.org>
