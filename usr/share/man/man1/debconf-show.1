.\" Automatically generated by Pod::Man 4.07 (Pod::Simple 3.32)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "DEBCONF-SHOW 1"
.TH DEBCONF-SHOW 1 "2017-05-21" "" "Debconf"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
debconf\-show \- query the debconf database
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\& debconf\-show packagename [...] [\-\-db=dbname]
\& debconf\-show \-\-listowners [\-\-db=dbname]
\& debconf\-show \-\-listdbs
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBdebconf-show\fR lets you query the debconf database in different ways.
.PP
The most common use is \*(L"debconf-show packagename\*(R", which displays all items
in the debconf database owned by a given package, and their current values.
Questions that have been asked already are prefixed with an '*'.
.PP
This can be useful as a debugging aid, and especially handy in bug reports
involving a package's use of debconf.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-db=\fR\fIdbname\fR" 4
.IX Item "--db=dbname"
Specify the database to query. By default, debconf-show queries the main
database.
.IP "\fB\-\-listowners\fR" 4
.IX Item "--listowners"
Lists all owners of questions in the database. Generally an owner is
equivalent to a debian package name.
.IP "\fB\-\-listdbs\fR" 4
.IX Item "--listdbs"
Lists all available databases.
.SH "AUTHOR"
.IX Header "AUTHOR"
Joey Hess <joeyh@debian.org> and Sylvain Ferriol
