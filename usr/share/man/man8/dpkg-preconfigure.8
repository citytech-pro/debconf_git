.\" Automatically generated by Pod::Man 4.07 (Pod::Simple 3.32)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "DPKG-PRECONFIGURE 8"
.TH DPKG-PRECONFIGURE 8 "2017-05-21" "" "Debconf"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
dpkg\-preconfigure \- let packages ask questions prior to their installation
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& dpkg\-preconfigure [options] package.deb
\&
\& dpkg\-preconfigure \-\-apt
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBdpkg-preconfigure\fR lets packages ask questions before they are installed.
It operates on a set of debian packages, and all packages that use debconf
will have their config script run so they can examine the system and ask
questions.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-f\fR\fItype\fR, \fB\-\-frontend=\fR\fItype\fR" 4
.IX Item "-ftype, --frontend=type"
Select the frontend to use.
.IP "\fB\-p\fR\fIvalue\fR, \fB\-\-priority=\fR\fIvalue\fR" 4
.IX Item "-pvalue, --priority=value"
Set the lowest priority of questions you are interested in. Any questions
with a priority below the selected priority will be ignored and their
default answers will be used.
.IP "\fB\-\-terse\fR" 4
.IX Item "--terse"
Enables terse output mode. This affects only some frontends.
.IP "\fB\-\-apt\fR" 4
.IX Item "--apt"
Run in apt mode. It will expect to read a set of package filenames from
stdin, rather than getting them as parameters. Typically this is used to
make apt run dpkg-preconfigure on all packages before they are installed.
To do this, add something like this to /etc/apt/apt.conf:
.Sp
.Vb 5
\& // Pre\-configure all packages before
\& // they are installed.
\& DPkg::Pre\-Install\-Pkgs {
\&        "dpkg\-preconfigure \-\-apt \-\-priority=low";
\& };
.Ve
.IP "\fB\-h\fR, \fB\-\-help\fR" 4
.IX Item "-h, --help"
Display usage help.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIdebconf\fR\|(7)
.SH "AUTHOR"
.IX Header "AUTHOR"
Joey Hess <joeyh@debian.org>
